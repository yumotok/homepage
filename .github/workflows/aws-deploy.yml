# CDK Deployを実行するためのワークフローファイル
# 1. Dockerイメージをビルドし、Amazon ECRにプッシュする
# 2. Amazon ECSタスク定義に新しいイメージIDを埋め込む
# 3. CDKを使用してAmazon ECSタスク定義をデプロイする
name: Deploy

on:
  push:
    branches: [ "develop" ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}         # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # set this to your Amazon ECR repository name
  AWS_ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/cdk-deploy-role # GitHub　Actions用に作成したIAMロールのARN

permissions:
  contents: read
  id-token: write

jobs:
  build-test-deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./nextjs
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: test
        run: npm run test
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: CDK Install dependencies
        working-directory: cdk
        run: npm ci
      - name: CDK Deploy
        working-directory: cdk
        run: npm run cdk:deploy
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ steps.build-image.outputs.IMAGE_TAG }}
      
